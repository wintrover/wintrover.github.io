# Site
repository: wintrover/wintrover.github.io # 사용자님의 GitHub 저장소 경로
# favicon: images/favicon.ico # 필요시 파비콘 경로 지정

# Content configuration version
version: 2

# Personal info
name: Su Hyok Yun # 기존 title에서 가져옴
title: AI developer
email: wintrover@gmail.com
# email_title: Email
# phone: Your phone number (optional)
# phone_title: Phone
# website: https://wintrover.github.io # 기존 url에서 가져옴
# website_title: Web

# Dark Mode (true/false/never)
darkmode: never # 기본값 유지 또는 취향에 따라 변경

# Social links
# twitter_username:
github_username: wintrover # 사용자님의 GitHub ID
# stackoverflow_username:
# dribbble_username:
# facebook_username:
# flickr_username:
# instagram_username:
linkedin_username: suhyok-yun-1934b713a
# xing_username:
# pinterest_username:
# youtube_username:
# orcid_username:
# googlescholar_username:

# Additional icon links
# additional_links:
# - title: Link name
#   icon: Font Awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: assets/images/profile.png # wintrover.github.io_new/assets/images/profile.png 를 사용한다고 가정, 필요시 경로 수정 또는 이미지 복사
about_content: | # Markdown 형식으로 자신을 소개해주세요.
  안녕하세요! Su Hyok Yun 입니다.
  이곳은 저의 개인 포트폴리오 웹사이트입니다.
  방문해주셔서 감사합니다.
  (wintrover.github.io_new/README.md 등의 내용을 참고하여 더 자세한 자기소개를 Markdown 형식으로 작성해주세요.)

content:
  - title: Projects
    layout: list
    content:
      - layout: top-middle
        title: CVFactory (자소서공장)
        logo: assets/images/CVFactory_logo.png
        # link: /projects/cvfactory
        additional_links:
          - title: GitHub Repository
            icon: fab fa-github
            url: https://github.com/wintrover/CVFactory
          - title: Live Demo
            icon: fas fa-external-link-alt
            url: https://cvfactory.dev
        quote: >
          원시 데이터에서 전문적인 자기소개서를 생성하는 자동화된 자소서 생성 도구입니다.
        description: |
          **개발 기간:** 진행 중
          **사용 기술:** Python, Django, Groq API, Selenium

          **주요 기능 및 해결 과제:**
          - Selenium 및 BeautifulSoup을 사용한 자동화된 채용 공고 및 회사 정보 크롤러 개발.
          - 데이터 관리 및 사용자 요청 처리를 위한 Django 백엔드 및 REST API 구축.
          - 개인 맞춤형 자기소개서 생성을 위한 Groq API 연동.
          - Django의 CSRF 보호 미들웨어 문제 해결.
          - 환경 변수 관리 및 .gitignore 강화를 통한 보안 강화.
          - 다단계 API 호출 방식을 통한 Groq API 토큰 제한 초과 문제 해결.
          - 프론트엔드-백엔드 CSRF 토큰 통합 문제 해결.
          - 패치된 메서드 및 폴백 HTTP 클라이언트를 사용하여 Groq API 클라이언트 초기화 오류 해결.
          - 지속적인 통합 및 배포를 위해 Netlify에 배포.
          - **향후 개선 사항:** AI 콘텐츠 제안, 키워드 최적화, 채용 플랫폼 연동.

      - layout: top-middle # 레이아웃은 top, left, right, top-left, top-right, top-middle 중 선택
        title: Face Recognition Dating App (소담연)
        logo: assets/images/sodamyeon_logo.png
        # link: /projects/sodamyeon # sodamyeon.md 파일이 있다면 해당 경로로
        additional_links:
          - title: GitHub Repository
            icon: fab fa-github
            url: https://github.com/Suyangdaekun/Sodamyeon.git
          - title: YouTube Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/embed/OM7OZrjQ1wo
        quote: >
          관상학과 천문학 기반 매칭 알고리즘을 활용한 시니어 데이팅 앱입니다.
        description: |
          **개발 기간:** 2주
          **사용 기술:** Mediapipe, Flask, Socket, Firebase

          **주요 기능 및 해결 과제:**
          - Mediapipe, dlib, FAN의 정확도 비교를 통한 얼굴 랜드마크 인식 시스템 개발.
          - Docker 및 동적 장치 감지를 사용하여 CUDA 메모리 문제 및 버전 충돌 해결.
          - 얼굴 비율 및 정렬 전처리를 기반으로 한 관상 분석 알고리즘 생성.
          - 해상도 정규화 및 서버 측 처리 옵션을 통해 다중 장치 호환성 문제 해결.
          - Socket.IO 및 Firebase를 사용한 안정적인 실시간 메시징 구현.
          - 더 큰 터치 대상과 단순화된 탐색 기능을 갖춘 시니어 친화적인 UI/UX 설계.
          - **결과:** 랜드마크 감지 정확도 94%로 향상, 시니어 작업 완료율 92% 달성, 처리 시간 0.7초로 단축.

      - layout: top-middle
        title: Deep Fake Detect App
        logo: assets/images/bluecheck_logo.png
        # link: /projects/deepfake
        additional_links:
          - title: GitHub Repository
            icon: fab fa-github
            url: https://github.com/wintrover/DeepFakeDetectApp
          - title: YouTube Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/embed/O3X-rWDxpi8
        quote: >
          딥러닝 모델을 사용하여 딥페이크 이미지와 비디오를 감지하는 모바일 애플리케이션입니다.
        description: |
          **개발 기간:** 2주
          **사용 기술:** ONNX, Kotlin, YOLO11, EfficientNet

          **주요 기능 및 해결 과제:**
          - 모바일 배포를 위해 모델 성능(EfficientNet-Lite0)과 앱 크기(양자화 후 16MB)의 균형 조정.
          - 비트맵 재활용 및 ONNX 텐서 해제를 구현하여 OOM(메모리 부족) 오류 해결.
          - YOLO11n-Face 및 박스 확장을 사용하여 얼굴 감지 정확도를 30% 실패율에서 94%로 향상.
          - 추론을 코루틴으로 마이그레이션하고 진행률 UI를 추가하여 UI 응답성 향상.
          - 특정 옵셋 버전으로 모델을 다시 내보내 ONNX 런타임 버전 불일치 문제 해결.
          - **결과:** 모델 크기 4.2MB, 추론 시간 350ms, FaceForensics++에서 91% 정확도 달성. 앱 충돌률 15%에서 0.2%로 감소.

  - title: Experience # 경력 사항
    layout: list
    content:
      # 경력 사항이 있다면 아래 형식으로 추가해주세요.
      # - layout: right
      #   title: 회사명
      #   sub_title: 직책
      #   caption: 근무 기간 (예: 2020.03 - 현재)
      #   # link: 회사 웹사이트 링크 (선택 사항)
      #   # quote: >
      #   #   회사에 대한 간략한 소개 (선택 사항)
      #   description: |
      #     - 담당했던 주요 업무 및 프로젝트
      #     - 사용했던 기술 및 도구
      #     - 구체적인 성과 (수치화 가능하면 좋음)

  - title: Education # 학력 사항
    layout: list
    content:
      # 학력 사항을 아래 형식으로 추가해주세요.
      # - layout: top-right
      #   title: 학교명
      #   sub_title: 전공 및 학위 (예: 컴퓨터공학 학사)
      #   caption: 재학 기간 (예: 2015.03 - 2019.02)
      #   # quote: >
      #   #   학교 또는 학과에 대한 간략한 소개 (선택 사항)
      #   description: |
      #     - 주요 학습 내용 및 수강 과목
      #     - 관련 프로젝트 또는 논문
      #     - 학점 또는 성적 (선택 사항)

  - title: Skills # 보유 기술
    layout: text # 또는 list 형식으로도 가능
    content: | # Markdown으로 자유롭게 기술
      **Programming Languages:**
      - Python
      - Java
      - JavaScript

      **Frameworks & Libraries:**
      - Spring Boot
      - React
      - Node.js

      **Databases:**
      - MySQL
      - PostgreSQL

      **Tools:**
      - Git & GitHub
      - Docker
      - Jenkins

      **(기타 본인이 자신있는 기술들을 추가해주세요)**

# Footer
footer_show_references: true
# references_title: References on request

# Build settings
# theme: modern-resume-theme # 로컬에서 직접 테마를 수정/개발하는 경우가 아니면 주석 처리
remote_theme: sproogen/modern-resume-theme # GitHub 호스팅 시 권장되는 방식

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-feed # 기존 플러그인 유지
 - jekyll-seo-tag # 기존 플러그인 유지

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
