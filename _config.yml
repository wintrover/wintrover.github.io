# Site
repository: wintrover/wintrover.github.io # 사용자님의 GitHub 저장소 경로
# favicon: images/favicon.ico # 필요시 파비콘 경로 지정

# Content configuration version
version: 2

# Personal info
name: Su Hyok Yun # 기존 title에서 가져옴
title: AI developer
email: wintrover@gmail.com
# email_title: Email
# phone: Your phone number (optional)
# phone_title: Phone
# website: https://wintrover.github.io # 기존 url에서 가져옴
# website_title: Web

# Dark Mode (true/false/never)
darkmode: never # 기본값 유지 또는 취향에 따라 변경

# Social links
# twitter_username:
github_username: wintrover # 사용자님의 GitHub ID
# stackoverflow_username:
# dribbble_username:
# facebook_username:
# flickr_username:
# instagram_username:
linkedin_username: suhyok-yun-1934b713a
# xing_username:
# pinterest_username:
# youtube_username:
# orcid_username:
# googlescholar_username:

# Additional icon links
# additional_links:
# - title: Link name
#   icon: Font Awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: assets/images/profile.png # wintrover.github.io_new/assets/images/profile.png 를 사용한다고 가정, 필요시 경로 수정 또는 이미지 복사
about_content: | # Markdown 형식으로 자신을 소개해주세요.
  성과 중심의 AI 개발자 지망생으로, LLM 및 NLP 분야에 관심이 많습니다.
  저는 전기전자공학부를 졸업 후, 기술 지원, 프론트엔드 개발 등 기술적인 분야 뿐만 아니라
  영업 및 비즈니스 전략 등 다양한 경험을 통해 효과적인 의사소통, 비즈니스 감각을 갖추었습니다.
  또한, Intel 개발자 과정에서 아래 소개드릴 프로젝트들을 통해 LLM, 컴퓨터 비전 양 분야를 넘나들며
  다양한 딥러닝 모델을 구축하고 실제 서비스 배포까지 폭넓은 경험을 쌓았습니다.
  저는 이러한 Python 및 관련 AI/ML 프레임워크 경험을 통한 기술력과,
  탄탄한 고객중심의 사고방식으로 UX를 혁신하여 영향력 있는 AI 솔루션을 구축하고 싶은 야망이 있습니다.

content:
  - title: Projects
    layout: list
    content:
      - layout: left
        title: CVFactory
        logo: assets/images/CVFactory_logo.png
        # link: /projects/cvfactory
        additional_links:
          - title: GitHub Repository
            icon: fab fa-github
            url: https://github.com/wintrover/CVFactory
          - title: Live Demo
            icon: fas fa-external-link-alt
            url: https://cvfactory.dev
        quote: >
          웹 스크래핑, RAG, LLM을 활용하여 채용 공고 맞춤형 자기소개서를 생성하는 자동화 도구입니다.
        dev_info: |
          **개발 기간:** 진행 중 <br/>
          **사용 기술:** Python, Django, FastAPI, Celery, Playwright, BeautifulSoup, Langchain (Groq API, Cohere Embeddings, FAISS), JavaScript, Docker, GitHub Actions, Google Cloud Run (Backend), Northflank (Frontend), Upstash Redis, PostgreSQL, Cloudflare
        description: |
          **주요 기능 및 도전 과제:**
            - **Frontend (CVFactory):**
              - Django 기반 UI 개발 (채용 공고/스토리 입력, 자기소개서 생성/수정).
            - **Backend (CVFactory Server):**
              - Playwright/BeautifulSoup 기반 웹 스크래핑 (비동기, iframe 지원).
              - FastAPI, Celery, Upstash Redis 기반 비동기 API 및 작업 처리.
              - Langchain (Cohere Embeddings, FAISS, Groq LLM) 기반 RAG 파이프라인 구축.
            - **공통 및 인프라:**
              - Docker 기반 애플리케이션 컨테이너화.
              - GitHub Actions CI/CD (Backend: Google Cloud Run, Frontend: Northflank).

            **향후 개선:**
            - 로그인 및 개인 설정 추가
            - FaaS 도입으로 크롤링 성능 최적화
            - 회사 홈페이지 크롤링 지원 기능 추가

            **성과:**
            - 동적 크롤링으로 iframe 크롤링 및 cohere를 통한 RAG화 성공
            - Google Cloud Run을 통한 안정적인 배포 완료

      - layout: left
        title: Face Recognition Dating App
        logo: assets/images/sodamyeon_logo.png
        # link: /projects/sodamyeon # sodamyeon.md 파일이 있다면 해당 경로로
        additional_links:
          - title: GitHub Repository
            icon: fab fa-github
            url: https://github.com/Suyangdaekun/Sodamyeon.git
          - title: YouTube Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/embed/OM7OZrjQ1wo
        quote: >
          관상학과 천문학 기반 매칭 알고리즘을 활용한 시니어 데이팅 앱입니다.
        dev_info: |
          **개발 기간:** 2주 <br/>
          **사용 기술:** Mediapipe, Firebase
        description: |
          **주요 기능 및 성과:**
          - 얼굴 랜드마크 인식 시스템 개발 (Mediapipe 등 정확도 비교).
          - 관상 분석 알고리즘 개발 및 적용.
          - 실시간 메시징 기능 구현 (Socket.IO, Firebase).
          - 시니어 친화적 UI/UX 설계.
          - Docker 기반 CUDA 메모리/버전 문제, 다중 장치 호환성 해결.

          <!-- -->
          **성과:** 랜드마크 정확도 94%, 시니어 사용성 92%, 처리 속도 0.7초.

      - layout: left
        title: Deep Fake Detect App
        logo: assets/images/bluecheck_logo.png
        # link: /projects/deepfake
        additional_links:
          - title: GitHub Repository
            icon: fab fa-github
            url: https://github.com/wintrover/DeepFakeDetectApp
          - title: YouTube Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/embed/O3X-rWDxpi8
        quote: >
          딥러닝 모델을 사용하여 딥페이크 이미지를 감지하는 모바일 애플리케이션입니다.
        dev_info: |
          **개발 기간:** 2주 <br/>
          **사용 기술:** ONNX, Kotlin, YOLO11, EfficientNet
        description: |
          **주요 기능 및 성과:**
          - 모바일 최적화 딥페이크 탐지 모델 개발 (EfficientNet-Lite0, ONNX).
          - 얼굴 감지 정확도 향상 (YOLO11n-Face, 30% → 50%).
          - OOM 오류 해결 및 UI 응답성 개선.
          - ONNX 런타임 버전 문제 해결.

          <!-- -->
          **성과:** 모델 4.2MB, 추론 350ms, 정확도 91%(FaceForensics++ 데이터셋 기준).

  - title: Experience # 경력 사항
    layout: list
    content:
      # 경력 사항이 있다면 아래 형식으로 추가해주세요.
      # - layout: right
      #   title: 회사명
      #   sub_title: 직책
      #   caption: 근무 기간 (예: 2020.03 - 현재)
      #   # link: 회사 웹사이트 링크 (선택 사항)
      #   # quote: >
      #   #   회사에 대한 간략한 소개 (선택 사항)
      #   description: |
      #     - 담당했던 주요 업무 및 프로젝트
      #     - 사용했던 기술 및 도구
      #     - 구체적인 성과 (수치화 가능하면 좋음)

  - title: Education # 학력 사항
    layout: list
    content:
      # 학력 사항을 아래 형식으로 추가해주세요.
      # - layout: top-right
      #   title: 학교명
      #   sub_title: 전공 및 학위 (예: 컴퓨터공학 학사)
      #   caption: 재학 기간 (예: 2015.03 - 2019.02)
      #   # quote: >
      #   #   학교 또는 학과에 대한 간략한 소개 (선택 사항)
      #   description: |
      #     - 주요 학습 내용 및 수강 과목
      #     - 관련 프로젝트 또는 논문
      #     - 학점 또는 성적 (선택 사항)

  - title: Skills # 보유 기술
    layout: text # 또는 list 형식으로도 가능
    content: | # Markdown으로 자유롭게 기술
      **Programming Languages:**
      - Python
      - Java
      - JavaScript

      **Frameworks & Libraries:**
      - Spring Boot
      - React
      - Node.js

      **Databases:**
      - MySQL
      - PostgreSQL

      **Tools:**
      - Git & GitHub
      - Docker
      - Jenkins

      **(기타 본인이 자신있는 기술들을 추가해주세요)**

# Footer
footer_show_references: true
# references_title: References on request

# Build settings
# theme: modern-resume-theme # 로컬에서 직접 테마를 수정/개발하는 경우가 아니면 주석 처리
remote_theme: sproogen/modern-resume-theme # GitHub 호스팅 시 권장되는 방식

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-feed # 기존 플러그인 유지
 - jekyll-seo-tag # 기존 플러그인 유지

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
